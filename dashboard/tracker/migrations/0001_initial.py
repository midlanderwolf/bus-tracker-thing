# Generated by Django 4.2.7 on 2025-10-01 20:38

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import tracker.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('trusted', models.BooleanField(help_text='Trusted user status', null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('score', models.IntegerField(blank=True, null=True)),
                ('bustimes_id', models.IntegerField(blank=True, help_text='Original ID from bustimes.org database', null=True, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', tracker.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line_ref', models.CharField(help_text='Route identifier', max_length=50, unique=True)),
                ('published_line_name', models.CharField(help_text='Human-readable route name', max_length=100)),
                ('operator_ref', models.CharField(help_text='Operator NOC code', max_length=20)),
                ('origin_ref', models.CharField(help_text='Origin stop ATCO code', max_length=20)),
                ('destination_ref', models.CharField(help_text='Destination stop ATCO code', max_length=20)),
                ('direction', models.CharField(help_text='Route direction', max_length=20)),
            ],
            options={
                'db_table': 'routes',
            },
        ),
        migrations.CreateModel(
            name='VehiclePosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_ref', models.CharField(help_text='Vehicle identifier', max_length=50)),
                ('line_ref', models.CharField(help_text='Route identifier', max_length=50)),
                ('direction_ref', models.CharField(help_text='Journey direction', max_length=20)),
                ('published_line_name', models.CharField(help_text='Route name', max_length=100)),
                ('operator_ref', models.CharField(help_text='Operator code', max_length=20)),
                ('origin_ref', models.CharField(help_text='Origin ATCO code', max_length=20)),
                ('origin_name', models.CharField(help_text='Origin name', max_length=100)),
                ('destination_ref', models.CharField(help_text='Destination ATCO code', max_length=20)),
                ('destination_name', models.CharField(blank=True, help_text='Destination name', max_length=100, null=True)),
                ('origin_aimed_departure_time', models.DateTimeField(blank=True, null=True)),
                ('destination_aimed_arrival_time', models.DateTimeField(blank=True, null=True)),
                ('longitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('latitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('bearing', models.DecimalField(decimal_places=2, help_text='Direction in degrees', max_digits=5)),
                ('velocity', models.DecimalField(blank=True, decimal_places=2, help_text='Speed in m/s', max_digits=5, null=True)),
                ('occupancy', models.CharField(blank=True, choices=[('full', 'Full'), ('standingAvailable', 'Standing Available'), ('seatsAvailable', 'Seats Available')], max_length=20, null=True)),
                ('block_ref', models.CharField(help_text='Operating block', max_length=50)),
                ('vehicle_journey_ref', models.CharField(help_text='Journey identifier', max_length=100)),
                ('recorded_at_time', models.DateTimeField(help_text='When data was recorded')),
                ('valid_until_time', models.DateTimeField(help_text='When data expires')),
                ('item_identifier', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'vehicle_positions',
                'indexes': [models.Index(fields=['vehicle_ref'], name='vehicle_pos_vehicle_03b5b5_idx'), models.Index(fields=['recorded_at_time'], name='vehicle_pos_recorde_ce76cb_idx'), models.Index(fields=['longitude', 'latitude'], name='vehicle_pos_longitu_09aedc_idx')],
                'unique_together': {('vehicle_ref', 'recorded_at_time')},
            },
        ),
        migrations.CreateModel(
            name='TrackingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_ref', models.CharField(help_text='Vehicle being tracked', max_length=50)),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tracking_sessions',
                'indexes': [models.Index(fields=['user'], name='tracking_se_user_id_71c70c_idx'), models.Index(fields=['is_active'], name='tracking_se_is_acti_da1d9b_idx')],
            },
        ),
    ]
